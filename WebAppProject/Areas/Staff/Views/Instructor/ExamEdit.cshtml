@model InstExamViewModel

@{
    ViewData["Title"] = "Edit Exam";
}

<div class="row">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <p class="card-title">Edit Exam</p>
                <div class="row">
                    <div class="col-12">
                        <p><strong>Course</strong> @Model.CourseName</p>
                        <form asp-action="EditExam" method="post">
                            <input asp-for="Id" value="@Model.Id" hidden />
                            <input asp-for="TotalGrade" value="@Model.TotalGrade" hidden />
                            <partial name="ExamEditPartial" />
                            <br />
                            <div class="d-flex justify-content-end">
                                <a asp-action="ShowExams" class="btn btn-inverse-dark m-2">Cancel</a>
                                <button type="submit" asp-route-id="@Model.CourseId" class="btn btn-primary m-2">Submit</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model.Questions != null)
{
    for (int i = 0; i < Model.Questions.Count; i++)
    {
        var question = Model.Questions[i];
        string badgeColor = question.Difficulty == QVMDifficulty.Easy ? "badge-success" :
                        question.Difficulty == QVMDifficulty.Medium ? "badge-warning" :
                        "badge-danger";
        <div class="row">
            <div class="col-md-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <p class="card-title">Q @(i + 1)</p>
                        <div class="row">
                            <div class="col-md-6 align-content-center">
                                <p class="font-weight-bold">Question</p>
                                <p>@question.Text</p>
                                <p class="font-weight-bold">Difficulty</p>
                                <label class="badge @badgeColor">@question.Difficulty</label>
                                <p class="font-weight-bold">Type</p>
                                <p>@(question.Type == QVMType.MCQ ? "Multiple Choices" : " Ture / False")</p>
                                <p class="font-weight-bold">Grade</p>
                                <p>@question.Grade</p>
                            </div>

                            <div class="col-md-6">
                                <p class="font-weight-bold pt-3">Choices</p>
                                @foreach (var choice in question.Choices)
                                {

                                    <div class="form-group">
                                        <div class="input-group">
                                            <input type="text" class="form-control" value="@choice.Text" readonly />
                                            <div class="input-group-append">
                                                <button disabled class="btn btn-sm @(@choice.IsCorrect ? "btn-success" : "btn-danger")">
                                                    <i class="mdi @(choice.IsCorrect ? "mdi-check" : "mdi-close")"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}