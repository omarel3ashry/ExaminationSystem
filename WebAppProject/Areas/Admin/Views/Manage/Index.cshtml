@model DashboardViewModel
@{
    ViewData["Title"] = "Dashboard - Examly";
    SelectList BranchesItems = new SelectList(Model.Branches, "Id", "Name");
    SelectList InstructorsItems = new SelectList(Model.Instructors, "Id", "Name");
    SelectList DepartmentsItems = new SelectList(Model.Departments, "Id", "Name");
}
<indicator hidden>admin-dash</indicator>
<div class="row justify-content-center">
    <div class="col-md-10 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <p class="card-title">Dashboard</p>
                <div class="d-flex align-items-center justify-content-start m-4">
                    <div class="form-group col-4 mr-5">
                        <label class="control-label">Branch</label>
                        <select asp-for="BranchId" class="form-control btn-primary" asp-items="BranchesItems">
                            <option value="-1">Select Branch</option>
                        </select>
                    </div>
                    <div class="col-6">
                        <a asp-action="Create" asp-controller="Branch" class="btn btn-inverse-success btn-rounded btn-icon-md ml-4 align-content-center">
                            <i class="mdi mdi-plus"></i>
                            </a>
                        <a id="BranchDetailsBtn" class="btn btn-inverse-info btn-rounded btn-icon-md ml-4 align-content-center">
                            <i class="mdi mdi-information-variant"></i>
                        </a>
                        <a id="BranchEditBtn" class="btn btn-inverse-primary btn-rounded btn-icon-md ml-4 align-content-center">
                            <i class="mdi mdi-pencil"></i>
                        </a>
                        <a id="BranchDeleteBtn" class="btn btn-inverse-danger btn-rounded btn-icon-md ml-4 align-content-center">
                            <i class="mdi mdi-delete"></i>
                        </a>
                    </div>
                </div>

                <div class="d-flex align-items-center justify-content-start m-4">
                    <div class="form-group col-4 mr-5">
                        <label class="control-label">Instructor</label>
                        <select asp-for="InstructorId" class="form-control  btn-primary" asp-items="InstructorsItems">
                            <option value="-1">Select Instructor</option>
                        </select>
                    </div>
                    <div class="col-6">
                        <a asp-action="Create" asp-controller="Instructor" class="btn btn-inverse-success btn-rounded btn-icon-md ml-4 align-content-center">
                            <i class="mdi mdi-plus"></i>
                        </a>
                        <a id="InstructorDetailsBtn" class="btn btn-inverse-info btn-rounded btn-icon-md ml-4 align-content-center">
                            <i class="mdi mdi-information-variant"></i>
                        </a>
                        <a id="InstructorEditBtn" class="btn btn-inverse-primary btn-rounded btn-icon-md ml-4 align-content-center">
                            <i class="mdi mdi-pencil"></i>
                        </a>
                        <a id="InstructorDeleteBtn" class="btn btn-inverse-danger btn-rounded btn-icon-md ml-4 align-content-center">
                            <i class="mdi mdi-delete"></i>
                        </a>
                    </div>
                </div>

                <div class="d-flex align-items-center justify-content-start m-4">
                    <div class="form-group col-4 mr-5">
                        <label class="control-label">Department</label>
                        <select asp-for="DepartmentId" class="form-control btn-primary" asp-items="DepartmentsItems">
                            <option value="-1">Select Department</option>
                        </select>
                    </div>
                    <div class="col-6">
                        <a asp-action="Create" asp-controller="Department" class="btn btn-inverse-success btn-rounded btn-icon-md ml-4 align-content-center">
                            <i class="mdi mdi-plus"></i>
                        </a>
                        <a id="DepartmentDetailsBtn" class="btn btn-inverse-info btn-rounded btn-icon-md ml-4 align-content-center">
                            <i class="mdi mdi-information-variant"></i>
                        </a>
                        <a id="DepartmentEditBtn" class="btn btn-inverse-primary btn-rounded btn-icon-md ml-4 align-content-center">
                            <i class="mdi mdi-pencil"></i>
                        </a>
                        <a id="DepartmentDeleteBtn" class="btn btn-inverse-danger btn-rounded btn-icon-md ml-4 align-content-center">
                            <i class="mdi mdi-delete"></i>
                        </a>
                    </div>
                </div>

                <div class="container row m-0 mt-3">
                    <div class="modal fade" id="modal" tabindex="-1" aria-labelledby="ModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h1 class="modal-title fs-5" id="ModalLabel">Instructors List</h1>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body" id="content">
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn info" data-bs-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-evenly align-items-center mb-3">
                        <a class="btn btn-inverse-primary btn-icon-text" id="ManageManagertBtn">
                            <i class="mdi mdi-account-plus btn-icon-prepend d-inline-block"></i>
                            Department Manager
                        </a>
                        <a class="btn btn-inverse-primary btn-icon-text" id="ManageStudentsBtn">
                            <i class="mdi mdi-account-multiple btn-icon-prepend d-inline-block"></i>
                            Manage Students
                        </a>
                    </div>
                  
                </div>
               
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        //Array of Btns Ids
        const BtnIds = ["DetailsBtn", "EditBtn", "DeleteBtn"]
        //method to change btn state (disabled or enabled)
        function setBtnState(targetController, state) {
            BtnIds.forEach(function (id) {
                var element = document.getElementById(targetController + id);
                if (element) {
                    if (state) {
                        element.classList.remove("disabled");
                    }
                    else {
                        element.classList.add("disabled");
                    }
                }
            });

        }
        //method to update btns urls acording to selected bransh
        function UpdateUrlState(targetController, targetId) {
            document.getElementById(targetId).addEventListener('change', function () {
                var selectedId = this.value;
                if (selectedId == -1) {
                    setBtnState(targetController, false);
                    setManageBtnState(targetId, false);
                }
                else {
                    setBtnState(targetController, true);
                    setManageBtnState(targetId, true);
                    document.getElementById(targetController + "DetailsBtn").setAttribute("href", `/Admin/${targetController}/Details/${selectedId}`);
                    document.getElementById(targetController + "EditBtn").setAttribute("href", `/Admin/${targetController}/Edit/${selectedId}`);
                    document.getElementById(targetController + "DeleteBtn").setAttribute("href", `/Admin/${targetController}/Delete/${selectedId}`);
                }
            });
        }
        //method to empty select list
        function EmptySelectList(targetId) {
            var selectElement = document.getElementById(targetId);

            while (selectElement.childNodes.length > 2) {
                selectElement.removeChild(selectElement.lastChild);
            }
        }
        //methods to append options
        function appendDepartmentOptions(datalist) {
            var selectElement = document.getElementById("DepartmentId");
            EmptySelectList("DepartmentId")

            datalist.forEach(function (Item) {
                var option = document.createElement("option");
                option.value = Item.id;
                option.textContent = Item.name;
                selectElement.appendChild(option);
            });
        };
        function appendInstructorOptions(datalist) {
            var selectElement = document.getElementById("InstructorId");
            EmptySelectList("InstructorId");

            datalist.forEach(function (Item) {
                var option = document.createElement("option");
                option.value = Item.id;
                option.textContent = Item.name;
                selectElement.appendChild(option);
            });
        }
        //method to update instructor and department select lists acording to selected bransh
        function UpdateSelectLists() {
            document.getElementById("BranchId").addEventListener("change", function () {
                var selectedId = this.value;
                if (selectedId == -1) {
                    EmptySelectList("DepartmentId");
                    EmptySelectList("InstructorId");
                    setManageBtnState("DepartmentId", false);
                    setManageBtnState("BranchId", false);

                } else {
                    $.ajax({
                        url: "/Admin/Manage/GetLists?BranchId=" + selectedId,
                        success: function (data) {
                            console.log(data);
                            appendDepartmentOptions(data.departmentList);
                            appendInstructorOptions(data.instructorList);
                        },
                        error: function (data) {
                            console.log(data);
                            alert("Error in load result");
                        }
                    });
                }
            });
        };
        //method to change manage btn state (disabled or enabled)
        function setManageBtnState(targetId, state) {
            if (targetId == "BranchId") {
                var element = document.getElementById("ManageManagertBtn");
                if (element) {
                    if (state) {
                        element.classList.remove("disabled");
                    }
                    else {
                        element.classList.add("disabled");
                    }
                }
            }
            else if (targetId == "DepartmentId") {
                var element = document.getElementById("ManageStudentsBtn");
                if (element) {
                    if (state) {
                        element.classList.remove("disabled");
                    }
                    else {
                        element.classList.add("disabled");
                    }
                }

            };

        }
        //method to add on click event
        function SetManageManagerOnClick() {
            document.getElementById("ManageManagertBtn").addEventListener('click', function () {
                let selectedBranchId = document.getElementById("BranchId").value;
                let selectedDeptId = document.getElementById("DepartmentId").value;
                $("#content").load(`/Admin/Manage/DepartmentManager?branchId=${selectedBranchId}&deptId=${selectedDeptId}`)
                $("#modal").modal('show');
            });
        };
        function SetManageStudentOnClick() {
            document.getElementById("ManageStudentsBtn").addEventListener('click', function () {
                let selectedId = document.getElementById("DepartmentId").value;
                this.setAttribute("href", `/Admin/Student?deptId=${selectedId}`);
            });
        };

        // Call Area

        let Controller;
        // Branch Area
        Controller = "Branch";
        setBtnState(Controller, false);
        UpdateUrlState(Controller, "BranchId");
        UpdateSelectLists();
        // Instructor Area
        Controller = "Instructor";
        setBtnState(Controller, false);
        UpdateUrlState(Controller, "InstructorId");
        // department Area
        Controller = "Department";
        setBtnState(Controller, false);
        UpdateUrlState(Controller, "DepartmentId");
        // manage btns Area
        setManageBtnState("DepartmentId", false);
        setManageBtnState("BranchId", false);
        SetManageManagerOnClick();
        SetManageStudentOnClick();
    </script>
}
